# load libraries
library(tidyverse)
# load libraries
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(DESeq2)
library(DESeq2)
library(pheatmap)
library(boxplotdbl)
library(gplots)
library(org.Hs.eg.db)
getwd()
setwd("../Differential Gene Expression Analysis/PD/")
PDData <- read.csv("data/PD_Counts.csv", header=T, check.names=FALSE, row.names=1)
PDmeta <- read.csv("data/PD_Meta.csv", header=T, check.names = FALSE,  row.names=1)
## Create DESeq2Dataset object
PDdds <- DESeqDataSetFromMatrix(countData = PDData, colData = PDmeta, design = ~ SampleType)
#View(counts(PDdds))
## Run analysis
PDdds <- DESeq(PDdds)
PDdds2 <- estimateSizeFactors(PDdds)
PDnormalized_counts <- counts(PDdds2, normalized=TRUE)
View(PDnormalized_counts)
df.ensemble.id <- sapply(sigOE$gene, function(x) strsplit(as.character(x),"\\.")[[1]][1])
contrast_ <- c("SampleType", "PD", "Control")
resultsNames(PDdds)
res_table_unshrunken <- results(PDdds, contrast=contrast_, alpha = 0.05, lfcThreshold = 0)
res_table_unshrunken <- results(PDdds, contrast=contrast_, alpha = 0.05, lfcThreshold = 0)
res_table_shrunken <- lfcShrink(PDdds, contrast=contrast_, res=res_table_unshrunken, type="ashr")
install.packages("ashr")
res_table_shrunken <- lfcShrink(PDdds, contrast=contrast_, res=res_table_unshrunken, type="ashr")
## Summarize results
summary(res_table_unshrunken)
res_table_unshrunken <- res_table_unshrunken %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
res_table_shrunken <- res_table_shrunken %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
### Set thresholds
padj.cutoff <- 0.05
lfc.cutoff <- 0
sigOE <- res_table_unshrunken %>%
filter(padj < padj.cutoff & abs(log2FoldChange) > lfc.cutoff)
df.ensemble.id <- sapply(sigOE$gene, function(x) strsplit(as.character(x),"\\.")[[1]][1])
df.in <- cbind(df.ensemble.id, sigOE)
mapper <- mapIds(org.Hs.eg.db,keys = sigOE$gene, column = "SYMBOL", keytype = "ENSEMBL", multiVals = "first")
mapper.df <- as.data.frame(mapper)
mapper.df <- cbind(rownames(mapper.df), mapper.df)
names(mapper.df) <- c("df.ensemble.id", "symbol")
df.out <- merge(df.in, mapper.df ,by="df.ensemble.id", all.x=TRUE)
df.out <- df.out[-1]
df.out <- df.out[ ! is.na(df.out$symbol),]
View(df.out)
View(sigOE)
View(PDnormalized_counts)
df.ensemble.id <- sapply(rownames(PDnormalized_counts), function(x) strsplit(as.character(x),"\\.")[[1]][1])
df.in <- cbind(df.ensemble.id, PDnormalized_counts)
View(df.in)
mapper <- mapIds(org.Hs.eg.db,keys = rownames(PDnormalized_counts), column = "SYMBOL", keytype = "ENSEMBL", multiVals = "first")
mapper.df <- as.data.frame(mapper)
mapper.df <- cbind(rownames(mapper.df), mapper.df)
names(mapper.df) <- c("df.ensemble.id", "symbol")
df.out <- merge(df.in, mapper.df ,by="df.ensemble.id", all.x=TRUE)
View(df.out)
table(is.na(df.out$symbol))
PD.n.filt <- df.out %>%
drop_na(symbol)
View(PD.n.filt)
length(unique(PD.n.filt$symbol))
View(cbind(PD.n.filt$symbol), PD.n.filt[,1:4])
View(cbind(PD.n.filt$symbolPD.n.filt[,1:4]))
View(cbind(PD.n.filt$symbol, PD.n.filt[,1:4]))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames(1) %>%
group_by(symbol) %>%
summarise_all(funs(mean))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames(1) %>%
group_by(symbol) %>%
summarise_all(.funs = mean())
df.out %>%
drop_na(symbol) %>%
column_to_rownames(1) %>%
group_by(symbol)
df.out %>%
drop_na(symbol)
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensembl.id") %>%
group_by(symbol) %>%
summarise_all(.funs = mean())
df.out
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensemble.id") %>%
group_by(symbol) %>%
summarise_all(.funs = mean())
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensemble.id") %>%
group_by(symbol) %>%
summarise_all(funs(mean))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensemble.id") %>%
group_by(symbol) %>%
summarise_all(~mean())
View(PDmeta)
sample.names <- rownames(PDmeta)
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensemble.id") %>%
group_by(symbol) %>%
summarise(across(mean))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
column_to_rownames("df.ensemble.id") %>%
group_by(symbol) %>%
summarise_at(.vars = sample.names, .funs = function(x) mean(x))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
# column_to_rownames("df.ensemble.id") %>%
select(-df.ensemble.id)%>%
group_by(symbol) %>%
summarise_at(.vars = sample.names, .funs = function(x) mean(x))
PD.n.filt <- df.out %>%
drop_na(symbol) %>%
# column_to_rownames("df.ensemble.id") %>%
dplyr::select(-df.ensemble.id)%>%
group_by(symbol) %>%
summarise_at(.vars = sample.names, .funs = function(x) mean(x))
ADData <- read.csv("data/AD_Counts_2.csv", header=T, check.names=FALSE, row.names=1)
ADmeta <- read.csv("data/AD_Meta_2.csv", header=T, check.names = FALSE,  row.names=1)
View(ADmeta)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.align='center')
rm(list = ls())
gc()
source("https://raw.githubusercontent.com/melsadany/workbench/master/msmuhammad-source.R", local = T)
theme_set(theme_minimal())
formatted_tbl <- function(x) {
kableExtra::kable_styling(knitr::kable(x))
}
ec <- economics
View(ec)
ec <- economics %>%
mutate(date=as.Date(date))
ec <- cbind(economics %>%
mutate(date=as.Date(date)) %>%
select(date),
scale(economics[-1], scale = T, center = T))
ec <- cbind(economics %>%
mutate(date=as.Date(date)) %>%
select(date),
scale(economics[,-1], scale = T, center = T))
ec <- cbind(economics %>%
mutate(date=as.Date(date)) %>%
select(date),
scale(economics[-1]%>%as.matrix(), scale = T, center = T))
ec <- cbind(economics %>%
mutate(date=as.Date(date)) %>%
dplyr::select(date),
scale(economics[-1], scale = T, center = T))
ec <- cbind(economics %>%
mutate(date=as.Date(date)) %>%
dplyr::select(date),
scale(economics[-1], scale = T, center = T)) %>%
pivot_longer(cols = colnames(economics)[-1], values_to = "std_v", names_to = "indicator")
ec %>%
ggplot(aes(x=date, y=std_v, color=indicator)) +
geom_line() +
labs(title = "US Economic Indicators",
y = "Standardized Value",
color = "Indicator") +
facet_wrap(~indicator, scales = "free_y")
source("https://raw.githubusercontent.com/melsadany/workbench/master/msmuhammad-source.R", local = T)
ec %>%
ggplot(aes(x=date, y=std_v, color=indicator)) +
geom_line() +
labs(title = "US Economic Indicators",
y = "Standardized Value",
color = "Indicator") +
facet_wrap(~indicator, scales = "free_y")
lausUS <- read.table("http://www.stat.uiowa.edu/~luke/data/laus/laucntycur14-2022.txt",
col.names = c("LAUSAreaCode", "State", "County",
"Title", "Period",
"LaborForce", "Employed",
"Unemployed", "UnempRate"),
quote = '"', sep = "|", skip = 6, strip.white = TRUE,
na.strings = "-", fill = TRUE)
View(lausUS)
footstart <- grep("------", lausUS$LAUSAreaCode)
lausUS <- lausUS[1:(footstart - 1),]
lausUS <- read.table("http://www.stat.uiowa.edu/~luke/data/laus/laucntycur14-2022.txt",
col.names = c("LAUSAreaCode", "State", "County",
"Title", "Period",
"LaborForce", "Employed",
"Unemployed", "UnempRate"),
quote = '"', sep = "|", skip = 6, strip.white = TRUE,
na.strings = "-", fill = TRUE)
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title))
View(lausUS.filt)
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title)) %>%
filter(IA==T)
lausUS.filt <- lausUS %>%
drop_na(County) %>%
filter(State==19)
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title)) %>%
filter(IA==T) %>%
select(-IA) %>%
mutate(Title = sub(", IA", "", Title))
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title)) %>%
filter(IA==T) %>%
dplyr::select(-IA) %>%
mutate(Title = sub(", IA", "", Title))
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title)) %>%
filter(IA==T) %>%
dplyr::select(-IA) %>%
mutate(Title = sub(", IA", "", Title)) %>%
group_by(Title) %>%
summarise(avg_UnempRate = mean(UnempRate))
lausUS.filt <- lausUS %>%
drop_na(County) %>%
mutate(IA= grepl(", IA", Title)) %>%
filter(IA==T) %>%
dplyr::select(-IA) %>%
mutate(Title = sub(", IA", "", Title)) %>%
group_by(Title) %>%
summarise(avg_UnempRate = mean(UnempRate)) %>%
arrange(avg_UnempRate)
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[1],
"\n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
"\n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
" \n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
" \n ",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
" \n ",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)])
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
"\\n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
"/n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", lausUS.filt$avg_UnempRate[nrow(lausUS.filt)]))
print(paste0("The county with the least employment rate over the time period used is : ",
lausUS.filt$Title[1],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[1],2),
"\n",
"The county with the highest employment rate over the time period used is : ",
lausUS.filt$Title[nrow(lausUS.filt)],
" with an avergate rate of: ", round(lausUS.filt$avg_UnempRate[nrow(lausUS.filt)],2)))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c))
h.c <- lausUS.filt$Title[nrow(lausUS.filt)]
l.c <- lausUS.filt$Title[1]
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
ggplot(aes(x=Period, y=UnempRate, color=Title)) +
geom_line()
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(Period))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(Period, format = "%m-%y"))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(Period, format = "%b-%y"))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(paste0("01-", Period), format = "%b-%y"))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(paste0("01-", Period), format = "%d-%b-%y"))
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(paste0("01-", Period), format = "%d-%b-%y")) %>%
ggplot(aes(x=Period, y=UnempRate, color=Title)) +
geom_line()
lausUS %>%
mutate(Title = sub(", IA", "", Title)) %>%
filter(Title %in% c(h.c, l.c)) %>%
mutate(date = as.Date(paste0("01-", Period), format = "%d-%b-%y")) %>%
ggplot(aes(x=date, y=UnempRate, color=Title)) +
geom_line()
print(l.c)
print(h.c)
gc()
